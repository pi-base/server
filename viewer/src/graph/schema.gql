# This file is automatically generated from src/Graph/Schema.hs
type Query {
  viewer(
    version: String
  ): Viewer!
  me: User!
}

type Viewer {
  version: String!
  spaces: [Space!]!
  properties: [Property!]!
  theorems: [Theorem!]!
}

type Space {
  uid: String!
  slug: String!
  name: String!
  aliases: [String!]!
  references: [Citation!]!
  description: String!
  proofOfTopology: String!
  traits: [Trait!]!
}

type Citation {
  type: String!
  ref: String!
  name: String!
}

type Trait {
  property: Property!
  value: Boolean!
  references: [Citation!]!
  description: String!
  deduced: Boolean!
}

type Property {
  uid: String!
  slug: String!
  name: String!
  aliases: [String!]!
  references: [Citation!]!
  description: String!
}

type Theorem {
  uid: String!
  if: String!
  then: String!
  references: [Citation!]!
  description: String!
}

type User {
  name: String!
  branches: [Branch!]!
}

type Branch {
  name: String!
  access: String!
  sha: String!
}

type Mutation {
  createSpace(
    patch: PatchInput!
    space: CreateSpaceInput!
  ): Viewer!
  createProperty(
    patch: PatchInput!
    property: CreatePropertyInput!
  ): Viewer!
  updateSpace(
    patch: PatchInput!
    space: UpdateSpaceInput!
  ): Viewer!
  updateProperty(
    patch: PatchInput!
    property: UpdatePropertyInput!
  ): Viewer!
  updateTheorem(
    patch: PatchInput!
    theorem: UpdateTheoremInput!
  ): Viewer!
  updateTrait(
    patch: PatchInput!
    trait: UpdateTraitInput!
  ): Viewer!
  assertTrait(
    patch: PatchInput!
    trait: AssertTraitInput!
  ): Viewer!
  assertTheorem(
    patch: PatchInput!
    theorem: AssertTheoremInput!
  ): Viewer!
  resetBranch(
    input: ResetBranchInput!
  ): Viewer!
  submitBranch(
    input: BranchInput!
  ): SubmitBranchResponse!
  approveBranch(
    input: BranchInput!
  ): Viewer!
}

input PatchInput {
  branch: String!
  sha: String!
}

input CreateSpaceInput {
  name: String!
  description: String
  references: [CitationInput]!
}

input CitationInput {
  name: String!
  type: String!
  ref: String!
}

input CreatePropertyInput {
  name: String!
  description: String
  references: [CitationInput]!
}

input UpdateSpaceInput {
  uid: String
  description: String
  references: [CitationInput]!
}

input UpdatePropertyInput {
  uid: String
  description: String
  references: [CitationInput]!
}

input UpdateTheoremInput {
  uid: String
  description: String
  references: [CitationInput]!
}

input UpdateTraitInput {
  spaceId: ID!
  propertyId: ID!
  description: String
  references: [CitationInput]!
}

input AssertTraitInput {
  spaceId: ID!
  propertyId: ID!
  value: Boolean!
  description: String
  references: [CitationInput]!
}

input AssertTheoremInput {
  antecedent: String!
  consequent: String!
  description: String
  references: [CitationInput]!
}

input ResetBranchInput {
  branch: String!
  to: String!
}

type SubmitBranchResponse {
  branch: String!
  url: String!
}

input BranchInput {
  branch: String!
}



schema {
  query: Query
  mutation: Mutation
}

