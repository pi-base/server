version: 2
jobs:
  build:
    docker:
      - image: fpco/stack-build
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: pi_base_test
    environment:
      CI:        true
      REPO_PATH: /data/repo

    steps:
      - checkout
      - run:
          name: Clone data repo
          command: |
            git clone --bare https://github.com/pi-base/data.git /data/repo/.git

      # Build and cached dependencies up to yesod
      # This and the full dependency build being split is soley a concession to the
      #   time and space limitations on a CircleCI build step
      - restore_cache:
          keys:
            - v1-stack-deps-{{ checksum "package.yaml" }}-yesod
            - v1-stack-deps-
      - run:
          name: Build yesod
          command: stack build yesod
          timeout: 1200
      - save_cache:
          key: v1-stack-deps-{{ checksum "package.yaml" }}-yesod
          paths:
            - ~/.stack
            - .stack-work

      # Build and cache installed dependencies based on package.yml
      - restore_cache:
          keys:
            - v1-stack-deps-{{ checksum "package.yaml" }}-all
            - v1-stack-deps-
      - run:
          name: Build deps
          command: stack build --only-dependencies
          timeout: 1200
      - run:
          name: Build test deps
          command: stack build --test --only-dependencies
      - save_cache:
          key: v1-stack-deps-{{ checksum "package.yaml" }}-all
          paths:
            - ~/.stack
            - .stack-work

      # Run the tests
      - run:
          name: Run tests
          command: stack test --no-terminal --coverage

      # Build and store artifacts
      - run:
          name: Build binary
          command: stack build && mkdir /tmp/artifacts && cp $(stack path --local-install-root)/bin/* /tmp/artifacts
      - run:
          name: Copy coverage reports
          command: cp -r $(stack path --local-hpc-root) /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts